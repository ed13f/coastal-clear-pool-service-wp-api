{"version":3,"file":"node_modules_graphiql_react_dist_lint_es2_js.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA,iCAAiC,4BAA4B;AACR;AACrD;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,sEAAsE,iBAAiB;AACvF;AACA;AACA,QAAQ,qDAAC;AACT,0BAA0B,qDAAC;AAC3B;AACA;AACA,CAAC;AAIC;AACF;;;;;;;;;;;;;;;AC7B4C;AACmB;AAClC;AAC7B;AACA;AACA;AACA;AACA;AACA,gDAAC;AACD,UAAU,sDAAsD;AAChE,SAAS,wEAAC;AACV;AACA;AACA;AACA,UAAU,gDAAC;AACX,QAAQ,gDAAC;AACT,GAAG;AACH,CAAC;AACD","sources":["webpack://wpgraphql-ide/./node_modules/@graphiql/react/dist/codemirror.es.js","webpack://wpgraphql-ide/./node_modules/@graphiql/react/dist/lint.es2.js"],"sourcesContent":["var c = Object.defineProperty;\nvar n = (r, o) => c(r, \"name\", { value: o, configurable: !0 });\nimport { r as f, g as p } from \"./codemirror.es2.js\";\nfunction u(r, o) {\n  for (var a = 0; a < o.length; a++) {\n    const e = o[a];\n    if (typeof e != \"string\" && !Array.isArray(e)) {\n      for (const t in e)\n        if (t !== \"default\" && !(t in r)) {\n          const i = Object.getOwnPropertyDescriptor(e, t);\n          i && Object.defineProperty(r, t, i.get ? i : {\n            enumerable: !0,\n            get: () => e[t]\n          });\n        }\n    }\n  }\n  return Object.freeze(Object.defineProperty(r, Symbol.toStringTag, { value: \"Module\" }));\n}\nn(u, \"_mergeNamespaces\");\nvar s = f();\nconst d = /* @__PURE__ */ p(s), m = /* @__PURE__ */ u({\n  __proto__: null,\n  default: d\n}, [s]);\nexport {\n  d as C,\n  m as c\n};\n//# sourceMappingURL=codemirror.es.js.map\n","import { C as t } from \"./codemirror.es.js\";\nimport { getDiagnostics as c } from \"graphql-language-service\";\nimport \"./codemirror.es2.js\";\nconst a = [\"error\", \"warning\", \"information\", \"hint\"], l = {\n  \"GraphQL: Validation\": \"validation\",\n  \"GraphQL: Deprecation\": \"deprecation\",\n  \"GraphQL: Syntax\": \"syntax\"\n};\nt.registerHelper(\"lint\", \"graphql\", (n, s) => {\n  const { schema: i, validationRules: r, externalFragments: o } = s;\n  return c(n, i, r, void 0, o).map((e) => ({\n    message: e.message,\n    severity: e.severity ? a[e.severity - 1] : a[0],\n    type: e.source ? l[e.source] : void 0,\n    from: t.Pos(e.range.start.line, e.range.start.character),\n    to: t.Pos(e.range.end.line, e.range.end.character)\n  }));\n});\n//# sourceMappingURL=lint.es2.js.map\n"],"names":[],"sourceRoot":""}